/* Author: Denis Podgurskii */

export class ptk_jwt {
    constructor() {

        this.severity = "High"
        this.attacks = [
            {
                id: "sqlinjection_1",
                description: "Single Quote SQL Injection",
                methods: ['GET', 'POST', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
                location: ['Path', 'Query', 'Post', 'Cookie'],
                options: {
                    attackValue: "'",
                    position: "before"
                }

            },
            {
                id: "sqlinjection_2",
                description: "Single Quote SQL Injection",
                methods: ['GET', 'POST', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
                location: ['Path', 'Query', 'Post', 'Cookie'],
                options: {
                    attackValue: "'",
                    position: "after"
                }
            },
            {
                id: "sqlinjection_3",
                description: "Double Quote SQL Injection",
                methods: ['GET', 'POST', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
                location: ['Path', 'Query', 'Post', 'Cookie'],
                options: {
                    attackValue: '"',
                    position: "before"
                }
            },
            {
                id: "sqlinjection_4",
                description: "Double Quote SQL Injection",
                methods: ['GET', 'POST', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],
                location: ['Path', 'Query', 'Post', 'Cookie'],
                options: {
                    attackValue: '"',
                    position: "after"
                }
            }
        ]
    }

    buildAttack(attack, random) {
        attack.options.attackValue = attack.options.attackValue.replace('{AttackId}', random)
        attack.options.vulnRegex = attack.options.vulnRegex.replace('{AttackId}', random)
        return attack
    }
}